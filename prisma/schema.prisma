// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum CycleMarker {
  START  // 周期开始（种植）
  END    // 周期结束（采收）
}

model ActivityType {
  id    Int    @id @default(autoincrement())
  name  String @unique 
  activities Activity[] 
  cycleMarker CycleMarker?
}

enum RecordCategory {
  income
  expense
}

model RecordCategoryType {
  id    Int    @id @default(autoincrement())
  name  String @unique 
  category RecordCategory @default(expense)
  records     Record[]    
}

model Plot {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  area       Float
  crop       String?
  isArchived Boolean    @default(false) // 新增：归档状态
  activities Activity[]
}

model Activity {
  id          Int               @id @default(autoincrement())
  type        ActivityType      @relation(fields: [activityTypeId], references: [id])
  activityTypeId Int            // 关联类型ID
  date        DateTime          @default(now())
  plot        Plot              @relation(fields: [plotId], references: [id])
  plotId      Int
  crop        String?           // 快照：记录本次活动发生时，地块上种植的作物，以保证历史准确性
  budget      Float?            // 可选：如果此活动是周期的开始，则可以设置预算
  records     Record[]    
}

model Record {
  id          Int                  @id @default(autoincrement())
  amount      Float           
  type        RecordCategoryType   @relation(fields: [recordTypeId], references: [id])
  recordTypeId Int                 // 关联类型ID
  date        DateTime             @default(now())
  description String?         
  activity    Activity?            @relation(fields: [activityId], references: [id])
  activityId  Int?            
}